name: 'Terraform Pipeline'

on:
  push:
    branches:
      - dev
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - dev
      - uat
      - prod
  workflow_dispatch

permissions:
  id-token: write
  contents: read

jobs:
  env-setup:
    runs-on: ubuntu-latest
    name: Environment setup
    env:
      VAR_FILE_NAME: env_var_file
      GLOBAL_CONFIG_REPO: cloudopsaas/global-config
      GLOBAL_CONFIG_VERSION: v1.0.10
      GLOBAL_CONFIG_FILE_PATH: lz/global_config.json
      MODULE_CONFIG_FILE_PATH: config/module_config.json
      CLOUD_ENV_VARIABLE_NAME: TF_VAR_cloud_env
      TF_ROOT_DIRECTORY: ./terraform
    outputs:
      var_file_name: ${{ env.VAR_FILE_NAME }}
      tf_root_directory: ${{ env.TF_ROOT_DIRECTORY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read config and set env
        uses: cloudopsaas/global-config/.github/reusable_actions/set_config_env@main
        with:
          global_config_repo: ${{ env.GLOBAL_CONFIG_REPO }}
          global_config_version: ${{ env.GLOBAL_CONFIG_VERSION }}
          global_config_file_path: ${{ env.GLOBAL_CONFIG_FILE_PATH }}
          module_config_file_path: ${{ env.MODULE_CONFIG_FILE_PATH }}
          cloud_env_variable_name: ${{ env.CLOUD_ENV_VARIABLE_NAME }}
          var_file_name: ${{ env.VAR_FILE_NAME }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Environment Variable Replacer
        uses: cloudopsaas/global-config/.github/reusable_actions/env_variable_replacer@main
        with:
          files: |
            ${{ env.TF_ROOT_DIRECTORY }}/tf_config.tf
            ${{ env.TF_ROOT_DIRECTORY }}/input.tf
            
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ./
          retention-days: 1

  terraform-validate:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed') }}
    needs: env-setup
    name: Terraform Validate
    uses: cloudopsaas/global-config/.github/workflows/reusable_tf_validate.yaml@main
    with:
      working_directory: ${{ needs.env-setup.outputs.tf_root_directory }}
      var_file_name: ${{ needs.env-setup.outputs.var_file_name }}

  terraform-lint:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed') }}
    needs: env-setup
    name: Terraform Lint
    uses: cloudopsaas/global-config/.github/workflows/reusable_tf_lint.yaml@main
    with:
      working_directory: ${{ needs.env-setup.outputs.tf_root_directory }}
      var_file_name: ${{ needs.env-setup.outputs.var_file_name }}

  terraform-analysis:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed') }}
    needs: env-setup
    name: Terraform Security
    uses: cloudopsaas/global-config/.github/workflows/reusable_tf_analysis.yaml@main
    with:
      working_directory: ${{ needs.env-setup.outputs.tf_root_directory }}
      var_file_name: ${{ needs.env-setup.outputs.var_file_name }}

  terraform-plan:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) }}
    needs: env-setup
    name: Terraform Plan
    uses: cloudopsaas/global-config/.github/workflows/reusable_tf_plan.yaml@main
    with:
      working_directory: ${{ needs.env-setup.outputs.tf_root_directory }}
      var_file_name: ${{ needs.env-setup.outputs.var_file_name }}

  manual-approval:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) }}
    name: Manual approval
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: manual-approval
    steps:
      - name: Job awaiting approval
        run: echo "Terraform plan was approved"
 
  terraform-apply:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) }}
    needs: [env-setup, terraform-plan, manual-approval]
    name: Terraform Apply
    uses: cloudopsaas/global-config/.github/workflows/reusable_tf_apply.yaml@main
    with:
      working_directory: ${{ needs.env-setup.outputs.tf_root_directory }}
      var_file_name: ${{ needs.env-setup.outputs.var_file_name }}